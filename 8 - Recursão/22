/*22. Uma sequencia de Fibonacci generalizada, de f0 a f1 e definida como fibg(f0, f1, 0),
fibg(f0, f1, 1), fibg(f0, f1, 2), ..., onde:
fibg(f0, f1, 0) = f0
fibg(f0, f1, 1) = f1
fibg(f0, f1, n) = fibg(f0, f1, n-1) + fibg(f0, f1, n-2), se n > 1. */
#include <stdio.h>

unsigned long long fibg(int f0, int f1, int n) {
    if (n == 0) {
        return f0;
    }
    if (n == 1) {
        return f1;
    }
    return fibg(f0, f1, n - 1) + fibg(f0, f1, n - 2);
}

int main() {
    int f0, f1, n;
    printf("Informe o valor de f0: ");
    scanf("%d", &f0);
    printf("Informe o valor de f1: ");
    scanf("%d", &f1);
    printf("Informe o valor de n: ");
    scanf("%d", &n);

    if (n < 0) {
        printf("Erro: n deve ser maior ou igual a 0.\n");
        return 0;
    }

    printf("fibg(%d, %d, %d) = %llu\n", f0, f1, n, fibg(f0, f1, n));
    return 0;
}
